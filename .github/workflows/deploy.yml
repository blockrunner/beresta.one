name: Deploy to Hosting

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies (if package.json exists)
      run: |
        if [ -f package.json ]; then
          npm ci
        fi
      continue-on-error: true
      
    - name: Build project (if build script exists)
      run: |
        if [ -f package.json ] && npm run build --if-present; then
          echo "Build completed"
        else
          echo "No build script found, using static files"
        fi
      continue-on-error: true
      
    # Deploy via SSH - requires SSH_HOST, SSH_USER, SSH_PASS secrets
    - name: Deploy to hosting via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        password: ${{ secrets.SSH_PASS }}
        port: ${{ secrets.SSH_PORT || 22 }}
        use_insecure_cipher: true
        script: |
          # Create directory if it doesn't exist (user has access only to public_html folder)
          mkdir -p ${{ secrets.SSH_REMOTE_PATH || 'public_html' }}
          
    # Sync files via rsync - requires SSH secrets
    - name: Sync files via rsync
      env:
        SSHPASS: ${{ secrets.SSH_PASS }}
      run: |
        # Install sshpass for password authentication
        sudo apt-get update && sudo apt-get install -y sshpass rsync
        
        # Debug: Show what we're about to sync
        echo "Files to sync:"
        ls -la
        
        # Debug: Test SSH connection
        echo "Testing SSH connection..."
        sshpass -e ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "pwd && ls -la"
        
        # Sync files to server
        echo "Starting rsync..."
        sshpass -e rsync -avz --delete --verbose \
          -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" \
          --exclude='.git*' \
          --exclude='.github/' \
          --exclude='.vscode/' \
          --exclude='node_modules/' \
          --exclude='README.md' \
          --exclude='.gitignore' \
          --exclude='package*.json' \
          --exclude='yarn.lock' \
          --exclude='.env*' \
          --exclude='DEPLOYMENT.md' \
          --exclude='GITHUB_SETUP.md' \
          ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_REMOTE_PATH || 'public_html' }}/
          
        # Debug: Verify files were uploaded
        echo "Verifying uploaded files..."
        sshpass -e ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "ls -la ${{ secrets.SSH_REMOTE_PATH || 'public_html' }}/"
          
    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "✅ Deployment successful!"
        else
          echo "❌ Deployment failed!"
        fi