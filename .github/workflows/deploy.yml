name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.prod
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Deploy to production server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        password: ${{ secrets.SSH_PASS }}
        port: 22
        script: |
          # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
          sudo mkdir -p /var/www/beresta
          sudo chown $USER:$USER /var/www/beresta
          
          # –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
          cd /var/www/beresta
          
          # –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
          if [ ! -d ".git" ]; then
            echo "Cloning repository..."
            git clone https://github.com/${{ github.repository }}.git .
          fi
          
          # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞
          echo "Updating code..."
          git fetch origin
          git reset --hard origin/main
          
          # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
          mkdir -p app/data logs ssl
          
          # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω–æ–≥–æ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
          if [ ! -f ssl/beresta.crt ] || [ ! -f ssl/beresta.key ]; then
            echo "Creating self-signed SSL certificate..."
            sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
              -keyout ssl/beresta.key \
              -out ssl/beresta.crt \
              -subj "/C=RU/ST=Saratov/L=Saratov/O=Beresta/CN=beresta.one"
            sudo chown $USER:$USER ssl/*
          fi
          
          # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ production –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∏–º–µ–Ω–µ–º –æ–±—Ä–∞–∑–∞
          sed "s/your-username\/beresta-website/${{ github.repository }}/g" docker-compose.prod.yml > docker-compose.yml
          
          # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
          echo "Stopping current containers..."
          docker-compose down || true
          
          # –°–±–æ—Ä–∫–∞ –Ω–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞
          echo "Building new image..."
          docker-compose build --no-cache beresta-app
          
          # –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
          echo "Starting updated containers..."
          docker-compose up -d beresta-app
          
          # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤
          echo "Cleaning up old images..."
          docker image prune -f
          
          echo "Deployment completed successfully!"

    - name: Health check
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        password: ${{ secrets.SSH_PASS }}
        port: 22
        script: |
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
          docker-compose ps
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–∞–π—Ç–∞
          curl -f https://beresta.one/ || exit 1
          curl -f https://beresta.one/applications/ || exit 1
          
          echo "Health check passed!"

    - name: Notify deployment status
      if: always()
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        password: ${{ secrets.SSH_PASS }}
        port: 22
        script: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "‚úÖ Deployment successful!"
            echo "üåê Site: https://beresta.one"
            echo "üì± App: https://beresta.one/app"
          else
            echo "‚ùå Deployment failed!"
            echo "Check logs for details"
          fi