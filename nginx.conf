# Nginx конфигурация для Beresta Website
# Поддержка красивых URL и оптимизация производительности

server {
    listen 80;
    server_name beresta.one www.beresta.one;
    root /var/www/beresta/public_html;
    index index.html;

    # Логирование
    access_log /var/log/nginx/beresta_access.log;
    error_log /var/log/nginx/beresta_error.log;

    # Gzip сжатие
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Кэширование статических файлов
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
    }

    # Кэширование HTML файлов
    location ~* \.html$ {
        expires 1h;
        add_header Cache-Control "public";
    }

    # Основные правила для красивых URL
    location / {
        try_files $uri $uri/ $uri.html @clean_urls;
    }

    # Обработка красивых URL
    location @clean_urls {
        # Попытка найти страницу в папке pages
        try_files /pages$uri/index.html /pages$uri.html $uri.html =404;
    }

    # Специальные правила для API
    location /api/ {
        try_files $uri $uri/ =404;
    }

    # Специальные правила для приложения
    location /app/ {
        try_files $uri $uri/ =404;
    }

    # API проксирование к Node.js серверу
    location /app/api/ {
        proxy_pass http://localhost:3000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
    }

    # Редирект старых URL на новые (обратная совместимость)
    location /W8dpUuQw/ {
        return 301 /app$request_uri;
    }

    # Безопасность - скрыть служебные файлы
    location ~ /\. {
        deny all;
    }

    location ~ \.(env|log|md)$ {
        deny all;
    }

    # Обработка 404 ошибок
    error_page 404 /404.html;
    location = /404.html {
        internal;
    }

    # Обработка 50x ошибок
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        internal;
    }
}

# HTTPS конфигурация (для продакшена)
server {
    listen 443 ssl http2;
    server_name beresta.one www.beresta.one;
    root /var/www/beresta/public_html;
    index index.html;

    # SSL сертификаты (замените на ваши)
    ssl_certificate /etc/ssl/certs/beresta.crt;
    ssl_certificate_key /etc/ssl/private/beresta.key;

    # SSL настройки
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Остальные настройки такие же как для HTTP
    include /etc/nginx/snippets/beresta-common.conf;
}

# Редирект с HTTP на HTTPS
server {
    listen 80;
    server_name beresta.one www.beresta.one;
    return 301 https://$server_name$request_uri;
}

