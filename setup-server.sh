#!/bin/bash

# Beresta Server Setup Script
# –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω–∞ –≤–∞—à–µ–º production —Å–µ—Ä–≤–µ—Ä–µ

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_message() {
    echo -e "${BLUE}[Beresta Setup]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[Beresta Setup]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[Beresta Setup]${NC} $1"
}

print_error() {
    echo -e "${RED}[Beresta Setup]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
check_environment() {
    print_message "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Ubuntu/Debian
    if ! command -v apt &> /dev/null; then
        print_error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è Ubuntu/Debian"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ sudo –ø—Ä–∞–≤
    if ! sudo -n true 2>/dev/null; then
        print_error "–¢—Ä–µ–±—É—é—Ç—Å—è sudo –ø—Ä–∞–≤–∞"
        exit 1
    fi
    
    print_success "–û–∫—Ä—É–∂–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ"
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
update_system() {
    print_message "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
    sudo apt update && sudo apt upgrade -y
    print_success "–°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
install_docker() {
    print_message "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π
    sudo apt remove -y docker docker-engine docker.io containerd runc || true
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    sudo apt install -y apt-transport-https ca-certificates curl gnupg lsb-release
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ Docker GPG –∫–ª—é—á–∞
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ Docker —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
    sudo apt update
    sudo apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker
    sudo usermod -aG docker $USER
    
    print_success "Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Git –∏ OpenSSL
install_dependencies() {
    print_message "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    sudo apt install -y git openssl ufw
    print_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –°–æ–∑–¥–∞–Ω–∏–µ SSH –∫–ª—é—á–∞
create_ssh_key() {
    print_message "–°–æ–∑–¥–∞–Ω–∏–µ SSH –∫–ª—é—á–∞..."
    
    if [ ! -f ~/.ssh/id_rsa ]; then
        ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N ""
        print_success "SSH –∫–ª—é—á —Å–æ–∑–¥–∞–Ω"
    else
        print_success "SSH –∫–ª—é—á —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–ª—é—á–∞ –≤ authorized_keys
    if [ ! -f ~/.ssh/authorized_keys ]; then
        touch ~/.ssh/authorized_keys
        chmod 600 ~/.ssh/authorized_keys
    fi
    
    if ! grep -q "$(cat ~/.ssh/id_rsa.pub)" ~/.ssh/authorized_keys; then
        cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
        print_success "–ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –¥–æ–±–∞–≤–ª–µ–Ω –≤ authorized_keys"
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ sudo –¥–ª—è Docker
setup_sudo() {
    print_message "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ sudo –¥–ª—è Docker..."
    
    echo "$USER ALL=(ALL) NOPASSWD: /usr/bin/docker, /usr/bin/docker-compose, /usr/local/bin/docker-compose" | sudo tee /etc/sudoers.d/docker-user
    sudo chmod 440 /etc/sudoers.d/docker-user
    
    print_success "Sudo –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è Docker"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
create_directories() {
    print_message "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    
    sudo mkdir -p /var/www/beresta
    sudo chown $USER:$USER /var/www/beresta
    
    mkdir -p /var/www/beresta/app/data
    mkdir -p /var/www/beresta/logs
    mkdir -p /var/www/beresta/ssl
    
    print_success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall
setup_firewall() {
    print_message "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall..."
    
    sudo ufw allow ssh
    sudo ufw allow 80/tcp
    sudo ufw allow 443/tcp
    sudo ufw --force enable
    
    print_success "Firewall –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ IP –∞–¥—Ä–µ—Å–∞
get_server_ip() {
    print_message "–ü–æ–ª—É—á–µ–Ω–∏–µ IP –∞–¥—Ä–µ—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞..."
    
    # –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –≤–Ω–µ—à–Ω–∏–π IP
    EXTERNAL_IP=$(curl -s ifconfig.me 2>/dev/null || curl -s ipinfo.io/ip 2>/dev/null || echo "–Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å")
    
    print_success "IP –∞–¥—Ä–µ—Å–∞:"
    echo "  –í–Ω–µ—à–Ω–∏–π IP: $EXTERNAL_IP"
    echo "  –õ–æ–∫–∞–ª—å–Ω—ã–π IP: $(hostname -I | awk '{print $1}')"
}

# –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è GitHub Secrets
show_github_secrets() {
    print_message "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è GitHub Secrets:"
    echo ""
    print_warning "–î–æ–±–∞–≤—å—Ç–µ —ç—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è –≤ GitHub Secrets:"
    echo ""
    echo "PRODUCTION_HOST: $EXTERNAL_IP"
    echo "PRODUCTION_USER: $USER"
    echo "PRODUCTION_PORT: 22"
    echo ""
    print_warning "PRODUCTION_SSH_KEY (–ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á):"
    echo "---"
    cat ~/.ssh/id_rsa
    echo "---"
    echo ""
    print_warning "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ GitHub: Settings > Secrets and variables > Actions"
    print_warning "–î–æ–±–∞–≤—å—Ç–µ —ç—Ç–∏ secrets –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    print_message "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Beresta Production Server"
    echo ""
    
    check_environment
    update_system
    install_docker
    install_dependencies
    create_ssh_key
    setup_sudo
    create_directories
    setup_firewall
    get_server_ip
    
    echo ""
    print_success "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    echo ""
    
    show_github_secrets
    
    echo ""
    print_message "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ DNS –¥–ª—è beresta.one –Ω–∞ IP: $EXTERNAL_IP"
    echo "2. –î–æ–±–∞–≤—å—Ç–µ GitHub Secrets (—Å–º. –≤—ã—à–µ)"
    echo "3. –°–¥–µ–ª–∞–π—Ç–µ push –≤ main –≤–µ—Ç–∫—É - –¥–µ–ø–ª–æ–π –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!"
    echo ""
    print_success "–°–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤ –∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º—É –¥–µ–ø–ª–æ—é! üöÄ"
}

# –ó–∞–ø—É—Å–∫
main "$@"
